on:
  push:
    tags:
      - '*'
name: Build & release
jobs:
  # building these in alpine seems to be far more reliable for cross platform
  linux-builds:
    strategy:
      matrix:
        arch: ["386", amd64, arm64]
    name: linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Set src directory
        run: echo "::set-output name=srcdir::$(pwd)"
        id: pwd
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: docker/setup-qemu-action@v1
      - name: Build in qemu
        run: |
          docker run --rm -v ${{ steps.pwd.outputs.srcdir }}:/src -w /src --entrypoint /bin/sh --platform linux/${{ matrix.arch }} golang:alpine -c \
          "apk add --no-cache gcc g++ && \
          go build -buildvcs=false -ldflags '-s -w -extldflags -static -X github.com/axllent/golp/cmd.Version=${{ steps.tag.outputs.tag }}'"
      - name: Golp version
        run: ./golp version
      - name: Create archive
        run: |
          tar -zcvf golp_linux_${{ matrix.arch }}.tar.gz golp README.md LICENSE
      - uses: craicoverflow/install-git-chglog@v1
      - name: git-chglog
        id: chglog
        run: git-chglog -t .chglog/RELEASE.tpl.md ${{ steps.tag.outputs.tag }}
      - name: Upload archive to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: golp_linux_${{ matrix.arch }}.tar.gz
          asset_name: golp_linux_${{ matrix.arch }}.tar.gz
          overwrite: true
          tag: ${{ github.ref }}
          body: ${{ steps.tag.outputs.chglog }}

  # linux:
  #   strategy:
  #     matrix:
  #       go-version: [1.18.x]
  #       os: [ubuntu-latest]
  #       goarch: ["386", amd64, arm64]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - uses: actions/setup-go@v3
  #     with:
  #       go-version: ${{ matrix.go-version }}
  #   - name: Get tag
  #     id: tag
  #     uses: dawidd6/action-get-tag@v1
  #   - uses: actions/checkout@v3
  #   - run: go build -ldflags '-s -w -X "github.com/axllent/golp/cmd.Version=${{ steps.tag.outputs.tag }}"'
  #     env:
  #       CGO_ENABLED: 1
  #   - run: tar -zcvf golp_linux_${{ matrix.goarch }}.tar.gz golp README.md LICENSE
  #   - name: Upload binaries to release
  #     uses: svenstaro/upload-release-action@v2
  #     with:
  #       repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       file: golp_linux_${{ matrix.goarch }}.tar.gz
  #       asset_name: golp_linux_${{ matrix.goarch }}.tar.gz
  #       overwrite: true
  #       tag: ${{ github.ref }}

  darwin:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [macos-latest]
        goarch: [amd64, arm64]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - uses: actions/checkout@v3
    - run: go build -ldflags '-s -w -X "github.com/axllent/golp/cmd.Version=${{ steps.tag.outputs.tag }}"'
      env:
        CGO_ENABLED: 1
    - run: ./golp version
    - run: tar -zcvf golp_darwin_${{ matrix.goarch }}.tar.gz golp README.md LICENSE
    - uses: craicoverflow/install-git-chglog@v1
      - name: git-chglog
        id: chglog
        run: git-chglog -t .chglog/RELEASE.tpl.md ${{ steps.tag.outputs.tag }}
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: golp_darwin_${{ matrix.goarch }}.tar.gz
        asset_name: golp_darwin_${{ matrix.goarch }}.tar.gz
        overwrite: true
        tag: ${{ github.ref }}
        body: ${{ steps.tag.outputs.chglog }}

  windows:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [windows-latest]
        goarch: ["386", amd64]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v3
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - run: go build -ldflags '-s -w -extldflags "-static" -X "github.com/axllent/golp/cmd.Version=${{ steps.tag.outputs.tag }}"'
      env:
        CGO_ENABLED: 1
    - name: Compress zip files
      uses: papeloto/action-zip@v1
      with:
        files: golp.exe README.md LICENSE
        dest: golp_windows_${{ matrix.goarch }}.zip
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: golp_windows_${{ matrix.goarch }}.zip
        asset_name: golp_windows_${{ matrix.goarch }}.zip
        overwrite: true
        tag: ${{ github.ref }}
