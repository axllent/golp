on:
  push:
    tags:
      - '*'
name: Build & release
jobs:
  changelog:
    name: Generate release changelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: Bpazy/setup-git-chglog@v1
      - name: Create release changelog
        run: git-chglog -t .chglog/RELEASE.tpl.md -o release-changelog.md ${{ steps.tag.outputs.tag }}
      - name: Upload release changelog
        uses: actions/upload-artifact@v3
        with:
          name: release-changelog
          path: release-changelog.md

  # using qemu & go:alpine seems to work properly for cross platform static builds
  linux-builds:
    name: linux
    needs: changelog
    strategy:
      matrix:
        go-version: ["1.18"]
        arch: ["386", amd64, arm64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Set src directory
        run: echo "::set-output name=srcdir::$(pwd)"
        id: pwd
      - uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pwd.outputs.srcdir }}/.go
          key: linux_${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            linux_${{ matrix.arch }}-go-
      - name: Get tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - uses: docker/setup-qemu-action@v1
      - name: Build in qemu
        run: |
          docker run --rm -v ${{ steps.pwd.outputs.srcdir }}:/src -w /src --entrypoint /bin/sh --platform linux/${{ matrix.arch }} golang:${{ matrix.go-version }}-alpine -c \
          "apk add --no-cache gcc g++ && \
          GOPATH="/src/.go/go" GOCACHE="/src/.go/cache" go build -buildvcs=false -ldflags '-s -w -extldflags -static -X github.com/axllent/golp/cmd.Version=${{ steps.tag.outputs.tag }}' \
          && find /src/.go -name *.zip -exec chmod 664 {} \;"
      - name: Golp version
        run: ./golp version
      - name: Create archive
        run: |
          tar -zcvf golp_linux_${{ matrix.arch }}.tar.gz golp README.md LICENSE
      - name: Download release changelog
        uses: actions/download-artifact@v3
        with:
          name: release-changelog
      - name: Read release changelog
        uses: edwardgeorge/file-outputs-action@main
        id: changelog
        with:
          files: |
            content=release-changelog.md
      - name: Upload archive to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: golp_linux_${{ matrix.arch }}.tar.gz
          asset_name: golp_linux_${{ matrix.arch }}.tar.gz
          overwrite: true
          tag: ${{ github.ref }}
          body: ${{ steps.changelog.outputs.content }}

  darwin:
    name: darwin
    needs: changelog
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [macos-latest]
        goarch: [amd64, arm64]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~/Library/Caches/go-build
          ~/go
        key: darwin_${{ matrix.goarch }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          darwin_${{ matrix.goarch }}-go-
    - run: go build -trimpath -ldflags '-s -w -X github.com/axllent/golp/cmd.Version=${{ steps.tag.outputs.tag }}'
      env:
        CGO_ENABLED: 1
    - run: ./golp version
    - name: Compress and check size
      shell: bash
      run: |
        tar -zcvf golp_darwin_${{ matrix.goarch }}.tar.gz golp README.md LICENSE
        SIZE=$(stat -f%z golp_darwin_${{ matrix.goarch }}.tar.gz)
        if (( $SIZE < 3500000)) ; then
          echo "File is too small ($SIZE), build failed!"
          exit 1
        fi
    - name: Download release changelog
      uses: actions/download-artifact@v3
      with:
        name: release-changelog
    - name: Read release changelog
      uses: edwardgeorge/file-outputs-action@main
      id: changelog
      with:
        files: |
          content=release-changelog.md
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: golp_darwin_${{ matrix.goarch }}.tar.gz
        asset_name: golp_darwin_${{ matrix.goarch }}.tar.gz
        overwrite: true
        tag: ${{ github.ref }}
        body: ${{ steps.changelog.outputs.content }}

  windows:
    name: windows
    needs: changelog
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [windows-latest]
        goarch: ["386", amd64]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: |
          ~\AppData\Local\go-build
          ~\go
        key: windows_${{ matrix.goarch }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          windows_${{ matrix.goarch }}-go-
    - name: Get tag
      id: tag
      uses: dawidd6/action-get-tag@v1
    - run: go build -ldflags '-s -w -extldflags -static -X github.com/axllent/golp/cmd.Version=${{ steps.tag.outputs.tag }}'
      env:
        CGO_ENABLED: 1
    - name: Compress zip files
      uses: papeloto/action-zip@v1
      with:
        files: golp.exe README.md LICENSE
        dest: golp_windows_${{ matrix.goarch }}.zip
    - name: Download release changelog
      uses: actions/download-artifact@v3
      with:
        name: release-changelog
    - name: Read release changelog
      uses: edwardgeorge/file-outputs-action@main
      id: changelog
      with:
        files: |
          content=release-changelog.md
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: golp_windows_${{ matrix.goarch }}.zip
        asset_name: golp_windows_${{ matrix.goarch }}.zip
        overwrite: true
        tag: ${{ github.ref }}
        body: ${{ steps.changelog.outputs.content }}
